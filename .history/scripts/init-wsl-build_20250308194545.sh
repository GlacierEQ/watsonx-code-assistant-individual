#!/bin/bash
# Initialize build environment for Ninja team in WSL environment
# This ensures proper Unix line endings and format compatibility

set -e

# Color formatting
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

BUILD_DIR=${1:-"build"}
echo -e "${YELLOW}Initializing WSL build environment in $BUILD_DIR...${NC}"

# Create build directory if it doesn't exist
mkdir -p "$BUILD_DIR"

# Create a minimal build.ninja file with proper Unix line endings
cat > "$BUILD_DIR/build.ninja" << 'EOF'
# Simple build.ninja file for Watsonx Code Assistant
# Generated by init-wsl-build.sh for WSL compatibility

rule cxx
  command = g++ -MMD -MT $out -MF $out.d -o $out -c $in
  description = CXX $out
  depfile = $out.d
  deps = gcc

rule link
  command = g++ -o $out $in
  description = LINK $out

build build/placeholder.o: cxx placeholder.cpp
build build/placeholder: link build/placeholder.o

default build/placeholder
EOF

# Create placeholder source if needed
if [ ! -f "placeholder.cpp" ]; then
    cat > "placeholder.cpp" << 'EOF'
// Placeholder source file for build system
#include <iostream>

int main() {
    std::cout << "Watsonx Code Assistant Ninja Build Team\n";
    return 0;
}
EOF
    echo -e "${GREEN}Created placeholder.cpp${NC}"
fi

# Check if build.ninja was created successfully
if [ -f "$BUILD_DIR/build.ninja" ]; then
    echo -e "${GREEN}Successfully created build.ninja with Unix line endings${NC}"
    echo -e "${GREEN}Build environment initialized for WSL${NC}"
    
    # Verify the file works with ninja
    if command -v ninja &> /dev/null; then
        cd "$BUILD_DIR"
        if ninja -t targets all &> /dev/null; then
            echo -e "${GREEN}✓ Verified build.ninja file is working correctly${NC}"
        else
            echo -e "${YELLOW}⚠️ build.ninja file exists but has formatting issues${NC}"
            echo -e "${YELLOW}Attempting to fix...${NC}"
            # Try to fix potential issues by rewriting the file
            sed 's/\r$//' build.ninja > build.ninja.tmp && mv build.ninja.tmp build.ninja
            chmod 644 build.ninja
            echo -e "${GREEN}Fixed build.ninja file${NC}"
        fi
        cd - > /dev/null
    fi
else
    echo -e "${RED}Failed to create build.ninja file${NC}"
    exit 1
fi

exit 0
