version: '3.8'

# Production-optimized configuration for Watsonx Code Assistant
services:
  watsonx:
    image: ${REGISTRY_URL:-ghcr.io/ibm}/watsonx-code-assistant:${TAG:-latest}
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - BUILDKIT_INLINE_CACHE=1
    ports:
      - "${UI_PORT:-5000}:5000"  # Web UI
      - "${OLLAMA_PORT:-11434}:11434"  # Ollama API
    volumes:
      - model_data:/data/models  # Model storage
      - app_data:/app/data       # Application data
    restart: unless-stopped
    environment:
      - TZ=${TZ:-UTC}
      - CUDA_VISIBLE_DEVICES=0
      - TF_GPU_ALLOCATOR=cuda_malloc_async
      - TF_XLA_FLAGS=--tf_xla_auto_jit=2
      - PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True
      - TF_MEMORY_ALLOCATION=0.85
      - LOG_LEVEL=INFO          # Production logging level
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    healthcheck:
      test: ["CMD", "/usr/local/bin/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "10"
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
    tmpfs:
      - /tmp:size=1G,exec,nodev,nosuid

  nginx:
    image: nginx:stable-alpine
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - nginx_logs:/var/log/nginx
    depends_on:
      - watsonx
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 60s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
      - DAC_READ_SEARCH

volumes:
  model_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${DATA_DIR:-./data}/models
  app_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${DATA_DIR:-./data}/app
  nginx_logs:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${LOG_DIR:-./logs}/nginx

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16
